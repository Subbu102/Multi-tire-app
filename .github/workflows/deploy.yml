name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Application
        run: mvn clean package

      - name: Rename JAR for Consistency
        run: mv target/*.jar target/bankapp.jar

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: target/bankapp.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact
          path: target

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/aws-key.pem
          chmod 600 ~/.ssh/aws-key.pem
          ls -lah ~/.ssh  # Verify directory and permissions
          head -n 5 ~/.ssh/aws-key.pem  # Verify key presence (Partial Output)

      - name: Debug EC2 Host
        run: echo "EC2 Host: ${{ secrets.AWS_EC2_HOST }}"

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/aws-key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} "echo 'âœ… SSH Connection Successful!'"
        continue-on-error: true  # Prevents immediate failure, allowing debugging

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "target/bankapp.jar"
          target: "/home/ubuntu/app/"

      - name: Restart Application on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            # Ensure the target directory exists
            mkdir -p /home/ubuntu/app

            # Create or update the systemd service file
            echo "[Unit]
            Description=Bank Application Service
            After=network.target

            [Service]
            User=ubuntu
            ExecStart=/usr/bin/java -jar /home/ubuntu/app/bankapp.jar
            Restart=always
            WorkingDirectory=/home/ubuntu/app
            StandardOutput=append:/var/log/bankapp.log
            StandardError=append:/var/log/bankapp-error.log

            [Install]
            WantedBy=multi-user.target" | sudo tee /etc/systemd/system/bankapp.service

            # Reload systemd and restart the service
            sudo systemctl daemon-reload
            sudo systemctl enable bankapp.service
            sudo systemctl restart bankapp.service
